{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "description": "Renovates this repositories",
  "extends": [
    "config:recommended",
    "npm:unpublishSafe",
    ":combinePatchMinorReleases",
    ":semanticCommits",
    ":semanticCommitTypeAll(chore)",
    ":semanticCommitScopeDisabled"
  ],
  "onboarding": false,
  "requireConfig": "ignored",
  "dependencyDashboard": true,
  "automerge": true,
  "autoApprove": true,
  "prHourlyLimit": 0,
  "prConcurrentLimit": 5,
  "enabledManagers": ["npm"],
  "printConfig": true,
  "labels": ["renovate"],
  "allowedPostUpgradeCommands": ["^(pnpm|find)"],
  "postUpgradeTasks": {
    "description": "Remove all nested pnpm-lock.yaml files, because renovate calls 'pnpm install --recursive --lockfile-only --ignore-scripts --ignore-pnpmfile' and this will create nested pnpm-lock.yaml files. You could create a pnpm workspace and exclude the projects, but we want renovate to update the nested package.json feels like there should be a better way to do this...",
    "commands": ["find . -mindepth 2 -name 'pnpm-lock.yaml' -exec rm -f {} +"],
    "fileFilters": ["pnpm-lock.yaml"]
  },
  "packageRules": [
    {
      "description": "ignore '@robby-rabbitman/nx-plus-*' packages, as nx release will handle it",
      "matchPackagePatterns": ["^@robby-rabbitman/nx-plus-"],
      "enabled": false
    },
    {
      "description": "Groups all '@commitlint' packages together",
      "groupName": "commitlint",
      "matchManagers": ["npm"],
      "matchPackagePatterns": ["^@commitlint/"]
    },

    {
      "description": "Groups all 'prettier' packages together",
      "groupName": "prettier",
      "matchManagers": ["npm"],
      "matchPackagePatterns": ["^prettier$", "^prettier-"]
    },
    {
      "description": "Groups all 'eslint' packages together",
      "groupName": "eslint",
      "matchManagers": ["npm"],
      "matchPackagePatterns": ["^eslint", "^@typescript-eslint/"]
    },
    {
      "description": "Groups all 'nx' packages together",
      "groupName": "nx",
      "matchManagers": ["npm"],
      "matchPackagePatterns": ["^@nx/", "^nx$"]
    },
    {
      "description": "Groups all 'jest' packages together",
      "groupName": "jest",
      "matchManagers": ["npm"],
      "matchPackagePatterns": ["^jest$", "^jest-"]
    },
    {
      "description": "Groups all 'swc' packages together",
      "groupName": "swc",
      "matchManagers": ["npm"],
      "matchPackagePatterns": ["^@swc-", "^swc/"]
    }
  ]
}
